
169. Majority Element
Solved
Easy
Topics
Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2

Solution

class Solution {
    public int majorityElement(int[] nums) {
        Map<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<nums.length; i++){
            int ele = nums[i];
            if(map.containsKey(ele)){
                map.put(ele,map.get(ele)+1);
            }
            else{
                map.put(ele,1);
            }
        }
        int max = -1;
        int ans = -1;
        for(Integer key : map.keySet()){
            if(max < map.get(key)){
                max = map.get(key);
                ans = key;
            }
        }  
        return ans;
        
    }
}
